name: cd-api

on:
  push:
    branches: [main, fix/cd]

# permissions to write, build and push the docker image
permissions:
  contents: read
  packages: write
  deployments: write

jobs:
  build_push:
    runs-on: ubuntu-latest
    name: 'Docker Deployement Cloud Run'
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: write
    defaults:
      run:
        shell: bash
    environment: production
    env:
      DOTNET_VERSION: "6.0.x"
      environment: production
      location: europe-west1
      GITHUB_SHA: ${{ github.sha }}
      service_name: box-api
      app_name: box
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
      - name: Configure docker
        run: |
          gcloud auth configure-docker ${{ env.location }}-docker.pkg.dev

      - name: Set output version
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Build the box api Docker image
        run: |
          docker build -f box.api/Dockerfile --tag samy266/box:${{ steps.vars.outputs.sha_short }} .
          docker push samy266/box:${{ steps.vars.outputs.sha_short }}

      - name: 'Deploy Cloud Run'
        run: |
          gcloud run deploy ${{ env.service_name }} \
          --image samy266/box:${{ steps.vars.outputs.sha_short }} \
          --platform managed \
          --region ${{ env.location }} \
          --allow-unauthenticated \
          --cpu 1 \
          --max-instances 3 \
          --memory 512M \
          --no-use-http2 \
          --set-env-vars API_KEY=${{ secrets.API_KEY }} \
          --set-env-vars ConnStr=${{ secrets.CONN_STR }} \
          --set-env-vars GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_STRING }}
